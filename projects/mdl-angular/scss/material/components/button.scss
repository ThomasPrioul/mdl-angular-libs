@use "sass:map";
@use "../theme";
@use "../../colors";
@use "../../material/palettes.scss";
@use "@angular/material" as mat;

@include mat.button-base(theme.$light-theme);
@include mat.button-density(theme.$light-theme);
@include mat.button-typography(theme.$light-theme);

@include mat.button-toggle-base(theme.$light-theme); //.set(theme.$light-theme, "density", -2));
@include mat.button-toggle-density(theme.$light-theme); //.set(theme.$light-theme, "density", -2));
@include mat.button-toggle-typography(
  theme.$light-theme
); //.set(theme.$light-theme, "density", -2));

@include mat.icon-button-base(theme.$light-theme);
@include mat.icon-button-density(theme.$light-theme);
@include mat.icon-button-typography(theme.$light-theme);

@include mat.fab-base(theme.$light-theme);
@include mat.fab-density(theme.$light-theme);
@include mat.fab-typography(theme.$light-theme);

.mat-mdc-unelevated-button {
  --mdc-filled-button-container-shape: 0.5rem !important;
}

.mat-mdc-outlined-button {
  --mdc-outlined-button-container-shape: 0.5rem !important;
}

.mat-mdc-raised-button {
  --mdc-protected-button-container-shape: 0.5rem !important;
}

.dark,
.light .dark {
  @include mat.button-color(theme.$dark-theme);
  @include mat.button-toggle-color(theme.$dark-theme);
  @include mat.icon-button-color(theme.$dark-theme);
  @include mat.fab-color(theme.$dark-theme);

  // *** Contrast fix example of custom accent color ***
  .mat-mdc-raised-button.mat-primary,
  .mat-mdc-unelevated-button.mat-primary,
  .mat-mdc-fab.mat-primary,
  .mat-mdc-mini-fab.mat-primary {
    color: mat.m2-get-color-from-palette(palettes.$primary-dark, default-contrast) !important;
    --mat-mdc-button-persistent-ripple-color: mat.m2-get-color-from-palette(
      palettes.$primary-dark,
      default-contrast
    ) !important;
    --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1); //Insert custom rgba contrast color
  }

  .mat-mdc-fab.mat-primary,
  .mat-mdc-mini-fab.mat-primary {
    --mdc-fab-icon-color: mat.m2-get-color-from-palette(palettes.$primary-dark, default-contrast);
    --mat-mdc-fab-color: mat.m2-get-color-from-palette(palettes.$primary-dark, default-contrast);
  }
}

.light,
.dark .light {
  @include mat.button-color(theme.$light-theme);
  @include mat.button-toggle-color(theme.$light-theme);
  @include mat.icon-button-color(theme.$light-theme);
  @include mat.fab-color(theme.$light-theme);

  .mat-mdc-raised-button.mat-unthemed {
    --mdc-protected-button-label-text-color: #{colors.$carbon};
  }
  .mat-mdc-unelevated-button.mat-unthemed {
    --mdc-filled-button-label-text-color: #{colors.$carbon};
  }

  .mat-mdc-button.mat-unthemed {
    --mdc-text-button-label-text-color: #{colors.$carbon};
  }
}

.small-btn-text {
  --mdc-typography-button-font-size: 14px;
}

.normal-btn-text {
  --mdc-typography-button-font-size: 16px;
}

/* Button */
:root {
  --mdc-text-button-container-shape: 0.5rem;
}

.mdc-button.mat-mdc-button {
  padding: 0 1rem;
  --mdc-text-button-container-shape: 0.5rem;
}

:not(.small) .mdc-button,
.mdc-button:not(.small) {
  min-height: 48px;
}

.small {
  @include mat.button-density(-2);
  @include mat.button-toggle-density(-2);
  @include mat.icon-button-density(-2);
  @include mat.fab-density(-2);

  .mdc-button,
  &.mdc-button {
    min-height: 40px;
  }

  .small {
    @include mat.icon-button-density(-4);
  }
}

.mat-mdc-outlined-button:not(:disabled) {
  &.mat-primary {
    --mdc-outlined-button-outline-color: #{colors.$primary};
  }
}

.mat-mdc-icon-button {
  line-height: 0;
}

.mat-mdc-button.mat-unthemed {
  --mdc-text-button-label-text-color: currentColor;
}

/* BUTTON TOGGLE */
.mat-button-toggle {
  .cdk-keyboard-focused .mat-button-toggle-focus-overlay {
    opacity: 0.1 !important;
  }

  &.mat-button-toggle-disabled,
  &.mat-button-toggle-disabled * {
    cursor: not-allowed;
  }

  &.mat-button-toggle-checked {
    .mat-pseudo-checkbox {
      display: none;
    }
  }
}

.mat-button-toggle-group {
  --mat-standard-button-toggle-shape: 12px !important;
  margin: -1px;
  min-width: fit-content;

  /* SNCF "options" style */
  &.options {
    padding: 4px;
    border: 0;
    margin: 0px;

    .dark .light &,
    .light &,
    &.light {
      background: rgb(227, 243, 239);

      .mat-button-toggle.mat-button-toggle-checked {
        background-color: rgb(227, 243, 239);
      }
    }

    .light .dark &,
    .dark &,
    &.dark {
      background: colors.$carbon;

      .mat-button-toggle.mat-button-toggle-checked {
        background-color: colors.$carbon;
      }

      .dark & {
        background: colors.$cool-gray-11;
      }
    }

    .mat-button-toggle {
      &.mat-button-toggle-appearance-standard {
        background: inherit;
        border-radius: 8px;
        border: 2px solid transparent;

        .mat-button-toggle-label-content {
          line-height: 36px;
        }

        .mat-button-toggle-ripple {
          border-radius: 8px;
        }
      }

      &.mat-button-toggle-checked {
        border-color: currentColor;
      }
    }

    &.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {
      border-left: 2px solid transparent;

      &.mat-button-toggle-checked {
        border-left-color: currentColor;
      }
    }
  }
}

.small .mat-button-toggle-group.options .mat-button-toggle .mat-button-toggle-label-content {
  line-height: 28px;
}
